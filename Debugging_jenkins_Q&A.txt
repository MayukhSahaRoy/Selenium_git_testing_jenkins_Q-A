1. Different types of applications.
A. Different types of applications are:
   a. General Purpose Application: This type of application is used
      for a variety of tasks and it is not limited to performing a
      specific task only. For example, MS-Word, MS-Excel,
      PowerPoint, etc.
   b. Customized Application: This type of application is used or
      designed to perform specific tasks or functions or designed
      for specific organizations. For example, railway reservation
      system, airline reservation system, invoice management system,
      etc.
   c. Utility Application: This type of application is used to
      support the computer infrastructure. It is designed to
      analyze, configure, optimize and maintains the system, and
      take care of its requirements as well. For example, antivirus,
      disk fragmenter, memory tester, disk repair, disk cleaners,
      registry cleaners, disk space analyzer, etc.

2. What is debugging?
A. Debugging is the process of identifying and resolving errors, or
   bugs, in a software system. It is an important aspect of software
   engineering because bugs can cause a software system to malfunction,
   and can lead to poor performance or incorrect results. Debugging
   can be a time-consuming and complex task, but it is essential for
   ensuring that a software system is functioning correctly.

   There are several common methods and techniques used in debugging,
   including:
   a. Code Inspection: This involves manually reviewing the source code
      of a software system to identify potential bugs or errors.
   b. Debugging Tools: There are various tools available for debugging
      such as debuggers, trace tools, and profilers that can be used to
      identify and resolve bugs.
   c. Unit Testing: This involves testing individual units or components
      of a software system to identify bugs or errors.
   d. Integration Testing: This involves testing the interactions
      between different components of a software system to identify bugs
      or errors.
   e. System Testing: This involves testing the entire software system
      to identify bugs or errors.
   f. Monitoring: This involves monitoring a software system for unusual
      behavior or performance issues that can indicate the presence of
      bugs or errors.
   g. Logging: This involves recording events and messages related to
      the software system, which can be used to identify bugs or errors.

3. Different types of testing.
A. Testing is the process of executing a program to find errors. To make
   our software perform well it should be error-free. If testing is done
   successfully it will remove all the errors from the software.
   Manual Testing - Manual testing is a technique to test the software
   that is carried out using the functions and features of an
   application. In manual software testing, a tester carries out tests
   on the software by following a set of predefined test cases. In this
   testing, testers make test cases for the codes, test the software,
   and give the final report about that software. Manual testing is
   time-consuming because it is done by humans, and there is a chance of
   human errors.
   Automation Testing - Automated Testing is a technique where the
   Tester writes scripts on their own and uses suitable Software or
   Automation Tool to test the software. It is an Automation Process of
   a Manual Process. It allows for executing repetitive tasks without
   the intervention of a Manual Tester.

4. Basics of Jenkins(CI-CD) – what is Jenkins, how create a simple job,
   how to build a job​
A. Jenkins is an open-source automation server that facilitates the
   automation of several stages of the software development lifecycle,
   including application development, testing, and deployment. Operating
   within servlet containers like Apache Tomcat, the technology is
   server-based.Continuous delivery (CD) and integration (CI) pipelines
   can be created and managed with Jenkins. The development, testing,
   and deployment of software applications are automated using CI/CD
   pipelines.
   
   In computing, a pipeline is a set of stages or processes linked
   together to form a processing system. Each stage in the pipeline
   takes an input, processes it in accordance with a set of rules, and
   then sends the outputs to the stage that follows. Frequently, the
   pipeline’s overall output is its final step’s output.
   
   Continuous Integration - Jenkins Continuous integration means
   whenever new code is committed to remote repositories like GitHub,
   GitLab, etc. Continuous Integration (CI) will continuously build,
   tested, and merged into a shared repository.
   
   Continuous Deployment - Continuous Deployment means automating the
   further stages of the pipeline automatically or manually deploying
   the application/code to different environments like Dev, Test, and
   Production. Automating the build is the main component of Continuous
   Integration and Continuous Deployment.
   
   Continuous Delivery - Each and every build that passed all automated
   tests and was able to be fully automated and delivered into
   production only required one click of human intervention is called
   Continuous Delivery.
   
   Jenkins Pipeline - DevOps professionals mostly work with pipelines
   because pipelines can automate the processes like building, testing,
   and deploying the application. Doing manually by UI takes lots of
   time and effort which will affect productivity. With the help of
   Continuous Integration / Continuous Deployment (CI/CD) Pipeline
   scripts we can automate the whole process which will increase
   productivity and save lots of time for the organization and can
   deliver quality applications to the end users.
   
   The following are the steps to create a simple job in Jenkins:-
   a. On left side of Main Dashboard we will find New Item, click on that.
   b. Then we enter the Job name. Here we are selecting the Freestyle
      Project and clicking ok.
   c. There are a lot of tabs available in this session such as SCM,
      build triggers,post build actions,Build env etc.
   d. This is a simple job not adding more configuration just creating by
      adding description.
   e. We click on build environment tab and, if we want to run windows
      commands select windows batch command and echo something or enter
      command dir and save it.
   f. On the left side we will find the Build now option, so we click on
      that.
   g. At bottom we will find the Build history click on that.(If dot is
      in blue color means build is success)
   h. On left side we will see console output, let's click on that we see
      the build output. A simple job creation and build is done.
   
